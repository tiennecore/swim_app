generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model User {
  id              String   @id @db.Uuid
  email           String?  @unique
  customAllures   String[]
  customDrills    String[]
  defaultTimeRepo Int      @default(20)
  distanceDefault Int      @default(100)
  poolSize        PoolSize @default(M25)
  profile         Profile?

  @@map("users")
  @@schema("public")
}

model Profile {
  id              String    @id @db.Uuid
  likes           Like[]
  user            User      @relation(fields: [id], references: [id])
  createdWorkouts Workout[] @relation("CreatedWorkouts")
  addedWorkouts   Workout[] @relation("AddedWorkouts")

  @@schema("public")
}

model Workout {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profileId   String?     @db.Uuid
  title       String
  description String?
  creatorId   String      @db.Uuid
  workoutType WorkoutType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  blocks      Block[]
  likes       Like[]
  creator     Profile     @relation("CreatedWorkouts", fields: [creatorId], references: [id])
  profile     Profile?    @relation("AddedWorkouts", fields: [profileId], references: [id])

  @@index([profileId])
  @@index([createdAt])
  @@schema("public")
}

model Block {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workoutId String     @db.Uuid
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  workout   Workout    @relation(fields: [workoutId], references: [id])
  exercises Exercise[]

  @@index([workoutId])
  @@schema("public")
}

model Exercise {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  blockId     String       @db.Uuid
  category    String
  value       Int?
  unit        String?
  repetitions Int?
  duration    Int?
  drill       String?
  equipment   String[]
  details     String?
  type        ExerciseType
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  block       Block        @relation(fields: [blockId], references: [id])

  @@index([category])
  @@index([blockId])
  @@schema("public")
}

model Like {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profileId String?  @db.Uuid
  workoutId String?  @db.Uuid
  createdAt DateTime @default(now())
  profile   Profile? @relation(fields: [profileId], references: [id])
  workout   Workout? @relation(fields: [workoutId], references: [id])

  @@index([workoutId])
  @@index([profileId])
  @@schema("public")
}

enum PoolSize {
  M25
  M50

  @@schema("public")
}

enum WorkoutType {
  ENDURANCE
  VITESSE_PUISSANCE
  TECHNIQUE
  RECUPERATION
  MIXTE

  @@schema("public")
}

enum ExerciseType {
  ECHAUFFEMENT
  EXERCICE
  RECUPERATION
  RETOUR_AU_CALME

  @@schema("public")
}
