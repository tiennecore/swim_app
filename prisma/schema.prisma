// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- MODÈLES POUR L'APPLICATION ---

// Modèle pour les profils utilisateur, lié à Supabase Auth
model profiles {
  id                    String    @id @default(uuid())
  name                  String?
  
  // Préférences utilisateur avec valeurs par défaut
  defaultRestTime       Int       @default(20)
  defaultDistance       Int       @default(100)
  defaultPoolLength     Int       @default(25)

  // Relations vers les éléments personnalisés par l'utilisateur
  customEquipments      CustomEquipment[]
  customBreathingRhythms CustomBreathingRhythm[]
  
  // Relation vers les entraînements et les likes de l'utilisateur
  workouts              Workout[]
  likes                 Like[]
}

// Modèles pour les entraînements
model Workout {
  id          String       @id @default(cuid())
  name        String
  workoutType WorkoutType?
  creatorName String?

  profileId String?
  profile   profiles? @relation(fields: [profileId], references: [id])
  
  blocks    Block[]
}

model Block {
  id          String     @id @default(cuid())
  name        String
  repetitions Int        @default(1)
  workoutId   String
  workout     Workout    @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  exercises   Exercise[]
}

model Exercise {
  id              String    @id @default(cuid())
  
  intensity       Intensity?
  equipment       String[]
  breathingRhythm Int?
  duration        Int?

  category  ExerciseCategory
  unit      ExerciseUnit
  value     Int
  stroke    StrokeType
  drill     String?
  details   String
  
  blockId String
  block   Block  @relation(fields: [blockId], references: [id], onDelete: Cascade)
}

// --- MODÈLES POUR LES DONNÉES PERSONNALISÉES ET SOCIALES ---

model CustomEquipment {
  id          String   @id @default(cuid())
  name        String
  profileId   String
  profile     profiles @relation(fields: [profileId], references: [id])
}

model CustomBreathingRhythm {
  id          String   @id @default(cuid())
  value       String
  profileId   String
  profile     profiles @relation(fields: [profileId], references: [id])
}

model Like {
  id               String   @id @default(cuid())
  workoutSignature String
  createdAt        DateTime @default(now())

  profileId        String?
  anonymousId      String?

  profile          profiles? @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@unique([profileId, workoutSignature])
  @@unique([anonymousId, workoutSignature])
}

// --- ENUMS (LISTES DE CHOIX PRÉDÉFINIES) ---

enum ExerciseCategory {
  ECHAUFFEMENT
  EXERCICE
  RECUPERATION
  FIN_DE_SEANCE
}

enum ExerciseUnit {
  DISTANCE // en mètres
  TEMPS    // en secondes
}

enum StrokeType {
  NAGE_LIBRE
  BRASSE
  CRAWL
  DOS_CRAWLE
  PAPILLON
  QUATRE_NAGES
  MIX
  DRILLS
  NON_DEFINI
}

enum Intensity {
  APPLIQUE
  LENT
  ENDURANCE
  RAPIDE
  SPRINT
  PROGRESSIF
  DEGRESSIF
}

enum WorkoutType {
  ENDURANCE
  VITESSE_PUISSANCE
  TECHNIQUE
  RECUPERATION
  MIXTE
}
