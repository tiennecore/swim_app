generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

// ============================
// AUTH.SCHEMA → User
// ============================
model User {
  id        String   @id @db.Uuid
  email     String?  @unique
  profile   Profile?

  @@map("users")
  @@schema("auth")
}

// ============================
// PUBLIC.SCHEMA → Profile
// ============================
model Profile {
  id       String   @id @db.Uuid
  user     User?    @relation(fields: [id], references: [id])
  workouts Workout[]
  likes    Like[]

  @@schema("public")
}

// ============================
// PUBLIC.SCHEMA → Workout
// ============================
model Workout {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId String?  @db.Uuid

  name      String
  blocks    Block[]
  likes     Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([createdAt])
  @@schema("public")
}

// ============================
// PUBLIC.SCHEMA → Block
// ============================
model Block {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workout   Workout  @relation(fields: [workoutId], references: [id])
  workoutId String   @db.Uuid

  name      String
  exercises Exercise[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workoutId])
  @@schema("public")
}

// ============================
// PUBLIC.SCHEMA → Exercise
// ============================
model Exercise {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  block     Block    @relation(fields: [blockId], references: [id])
  blockId   String   @db.Uuid

  category   String
  value      Int?
  unit       String?
  repetitions Int?
  duration   Int?
  drill      String?
  equipment  String[] @db.Text
  details    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([category])
  @@index([blockId])
  @@schema("public")
}

// ============================
// PUBLIC.SCHEMA → Like
// ============================
model Like {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId String?  @db.Uuid

  workout   Workout? @relation(fields: [workoutId], references: [id])
  workoutId String?  @db.Uuid

  createdAt DateTime @default(now())

  @@index([workoutId])
  @@index([profileId])
  @@schema("public")
}
